{"version":3,"sources":["components/TaskListItem.js","components/TaskList.js","components/AppLoader.js","components/CreateTodoBox.js","components/App.js","serviceWorker.js","index.js"],"names":["TaskListItem","completeTaskHandler","props","markAsComplete","taskIndex","deleteTodoHandler","deleteTodo","task","completeBtn","this","completed","className","onClick","title","description","React","Component","defaultProps","console","log","TaskList","listTitle","trim","taskListTemplate","tasks","map","index","key","clearBtn","clearable","clearTodos","disabled","length","AppLoader","show","text","CreateTodoBox","createTask","initialValues","validationSchema","yup","min","required","onSubmit","values","resetForm","formik","handleSubmit","htmlFor","type","id","name","getFieldProps","placeholder","errors","touched","App","addTaskHandler","showLoader","axios","post","then","res","isSuccessStatus","status","setState","state","data","todo","catch","err","error","message","finally","uncompletedTasks","find","put","_id","completedTasks","taskId","delete","findIndex","splice","statusCode","todos","Error","loader","get","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.440d7632.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport \"../styles/TaskListItem.css\";\r\n\r\nexport default class TaskListItem extends React.Component {\r\n\trender() {\r\n\t\tconst completeBtn = !this.props.task.completed \r\n\t\t\t? (\r\n\t\t\t\t<button \r\n\t\t\t\t\tclassName=\"action-btns__complete-btn\" \r\n\t\t\t\t\tonClick={this.completeTaskHandler}\r\n\t\t\t\t\t> Complete </button>\r\n\t\t\t)\r\n\t\t\t: null;\r\n\r\n\t\treturn (\r\n\t\t\t<li className=\"task-list-item\">\r\n\t\t\t\t<div className=\"task-info\">\r\n\t\t\t\t\t<p className=\"task-info__title\">{this.props.task.title}</p>\r\n\t\t\t\t\t<p className=\"task-info__description\">{this.props.task.description}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"action-btns\">\r\n\t\t\t\t\t{completeBtn}\r\n\t\t\t\t\t<button className=\"action-btns__delete-btn\" onClick={this.deleteTodoHandler}>Delete</button>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t);\r\n\t}\r\n\r\n\tcompleteTaskHandler = () => {\r\n\t\tthis.props.markAsComplete(this.props.taskIndex);\r\n\t}\r\n\r\n\tdeleteTodoHandler = () => {\r\n\t\tthis.props.deleteTodo(this.props.task);\r\n\t}\r\n}\r\n\r\nTaskListItem.propTypes = {\r\n\ttask: PropTypes.object,\r\n\ttaskIndex: PropTypes.number,\r\n\tmarkAsComplete: PropTypes.func,\r\n}\r\n\r\nTaskListItem.defaultProps = {\r\n\ttask: {\r\n\t\ttitle: \"Task title\",\r\n\t\tdescription: \"Lorem ipsum dolor sit amet.\",\r\n\t\tcompleted: false\r\n\t},\r\n\ttaskIndex: 0,\r\n\tmarkAsComplete: () => console.log(\"TaskListItem: Default markAsComplete\")\r\n}\r\n","import React from 'react';\r\nimport \"../styles/TaskList.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport TaskListItem from \"./TaskListItem\";\r\n\r\nexport default class TaskList extends React.Component {\r\n\trender() {\r\n\t\tconst listTitle = !!this.props.title.trim() \r\n\t\t\t? <span className=\"task-list__title\">{this.props.title}</span> \r\n\t\t\t: null;\r\n\t\tconst taskListTemplate = this.props.tasks.map((task, index) => {\r\n\t\t\treturn (\r\n\t\t\t\t<TaskListItem \r\n\t\t\t\t\ttask={task} \r\n\t\t\t\t\tkey={index} \r\n\t\t\t\t\ttaskIndex={index}\r\n\t\t\t\t\tmarkAsComplete={this.props.markAsComplete}\r\n\t\t\t\t\tdeleteTodo={this.props.deleteTodo}\r\n\t\t\t\t\t/>\r\n\t\t\t)\r\n\t\t});\r\n\t\tconst clearBtn = this.props.clearable \r\n\t\t\t? (<li className=\"clearControlWrapper\">\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName=\"clearBtn\" \r\n\t\t\t\t\t\tonClick={this.props.clearTodos} \r\n\t\t\t\t\t\tdisabled={this.props.tasks.length === 0}\r\n\t\t\t\t\t\t> Clear\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>)\r\n\t\t\t: null;\r\n\r\n\t\treturn (\r\n\t\t\t<ul className=\"task-list\">\r\n\t\t\t\t{listTitle}\r\n\t\t\t\t{taskListTemplate}\r\n\t\t\t\t{clearBtn}\r\n\t\t\t</ul>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nTaskList.propTypes = {\r\n\ttasks: PropTypes.array,\r\n\ttitle: PropTypes.string,\r\n\tclearable: PropTypes.bool,\r\n\tdeleteTodo: PropTypes.func,\r\n\tclearTodos: PropTypes.func,\r\n\tmarkAsComplete: PropTypes.func,\r\n}\r\n\r\nTaskList.defaultProps = {\r\n\ttasks: [\r\n\t\t{\r\n\t\t\ttitle: \"Task 1\",\r\n\t\t\tdescription: \"List Item\",\r\n\t\t\tcompleted: false,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"Task 2\",\r\n\t\t\tdescription: \"List Item 2\",\r\n\t\t\tcompleted: true,\r\n\t\t}\r\n\t],\r\n\r\n\ttitle: \"\",\r\n\tclearable: false\r\n}\r\n","import React from 'react';\r\nimport \"../styles/AppLoader.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class AppLoader extends React.Component {\r\n\trender() {\r\n\t\tconst loader = this.props.show ? (\r\n\t\t\t<div className=\"appLoader\">\r\n\t\t\t\t<div className=\"appLoader__spinner\"></div>\r\n\t\t\t\t<span>{this.props.text}</span>\r\n\t\t\t</div>\r\n\t\t): null;\r\n\r\n\t\treturn loader\r\n\t}\r\n}\r\n\r\nAppLoader.propTypes = {\r\n\tshow: PropTypes.bool,\r\n\ttext: PropTypes.string,\r\n}\r\n\r\nAppLoader.defaultProps = {\r\n\ttext: \"Loading...\"\r\n}","import React from \"react\";\r\nimport * as yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../styles/CreateTodoBox.css\";\r\n\r\nexport default function CreateTodoBox({ createTask }){\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{\r\n\t\t\t\ttitle: \"\",\r\n\t\t\t\tdescription: \"\"\r\n\t\t\t}}\r\n\t\t\tvalidationSchema={ yup.object({\r\n\t\t\t\ttitle: yup.string()\r\n\t\t\t\t\t.min(5, \"title must be 5 characters or more\")\r\n\t\t\t\t\t.required(\"Missing task title\"),\r\n\t\t\t\tdescription: yup.string()\r\n\t\t\t\t\t.required(\"Missing task description\")\r\n\t\t\t})}\r\n\t\t\tonSubmit={(values, {resetForm}) => {\r\n\t\t\t\tcreateTask({\r\n\t\t\t\t\t...values,\r\n\t\t\t\t\tcompleted: false\r\n\t\t\t\t});\r\n\t\t\t\tresetForm();\r\n\t\t\t}}\r\n\t\t\t>\r\n\t\t\t{formik => (\r\n\t\t\t\t<form className=\"create-todo-box\" onSubmit={formik.handleSubmit}>\r\n\t\t\t\t\t<div className=\"box-row\">\r\n\t\t\t\t\t\t<div className=\"box-row__col\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"title\">Title</label>\r\n\t\t\t\t\t\t\t<input type=\"text\"\r\n\t\t\t\t\t\t\t\tid=\"title\"\r\n\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t\tclassName=\"box-row__col__input\"\r\n\t\t\t\t\t\t\t\t{...formik.getFieldProps(\"title\")}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter task title\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{ formik.errors.title && formik.touched.title \r\n\t\t\t\t\t\t\t\t? <small className=\"box-row__col__error-message\">*{formik.errors.title}</small>\r\n\t\t\t\t\t\t\t\t: null }\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"box-row__col\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"description\">Description</label>\r\n\t\t\t\t\t\t\t<input type=\"text\"\r\n\t\t\t\t\t\t\t\tid=\"description\"\r\n\t\t\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\t\t\tclassName=\"box-row__col__input\"\r\n\t\t\t\t\t\t\t\t{...formik.getFieldProps(\"description\")} \r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter task description\"\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{ formik.errors.description && formik.touched.description \r\n\t\t\t\t\t\t\t\t? <small className=\"box-row__col__error-message\">*{formik.errors.description}</small>\r\n\t\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"box-row__submit\">Add Todo</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t)\r\n}\r\n\r\nCreateTodoBox.propTypes = {\r\n\tcreateTask: PropTypes.func\r\n}","import React from 'react';\r\nimport axios from \"axios\";\r\nimport \"../styles/App.css\";\r\nimport TaskList from \"./TaskList\";\r\nimport AppLoader from \"./AppLoader\";\r\nimport CreateTodoBox from \"./CreateTodoBox\";\r\n\r\nexport default class App extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttasks: [],\r\n\t\t\tloader: {\r\n\t\t\t\tshow: false,\r\n\t\t\t\ttext: \"Loading...\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<AppLoader \r\n\t\t\t\t\tshow={this.state.loader.show} \r\n\t\t\t\t\ttext={this.state.loader.text}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<div className=\"app\">\r\n\t\t\t\t\t<h1 className=\"app__title\">Todoist</h1>\r\n\t\t\t\t\t<CreateTodoBox createTask={this.addTaskHandler}/>\r\n\t\t\t\t\t<TaskList \r\n\t\t\t\t\t\ttitle=\"uncompleted tasks\" \r\n\t\t\t\t\t\tdeleteTodo={this.deleteTodoHandler}\r\n\t\t\t\t\t\ttasks={this.uncompletedTasks}\r\n\t\t\t\t\t\tmarkAsComplete={this.completeTaskHandler} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t<TaskList \r\n\t\t\t\t\t\ttitle=\"completed tasks\" \r\n\t\t\t\t\t\ttasks={this.completedTasks} \r\n\t\t\t\t\t\tdeleteTodo={this.deleteTodoHandler}\r\n\t\t\t\t\t\tclearable={true}\r\n\t\t\t\t\t\tclearTodos={this.clearTodos}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\taddTaskHandler = task => {\r\n\t\tthis.showLoader({ text: \"Please wait...\"});\r\n\t\taxios.post(\"http://localhost:3030/api/create\", task)\r\n\t\t\t.then(res => {\r\n\t\t\t\tif(this.isSuccessStatus(res.status)){\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\ttasks: [\r\n\t\t\t\t\t\t\t...this.state.tasks,\r\n\t\t\t\t\t\t\tres.data.todo\r\n\t\t\t\t\t\t] \r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => console.error(err.message))\r\n\t\t\t.finally(() => {\r\n\t\t\t\tthis.showLoader({ state: false });\r\n\t\t\t})\r\n\t}\r\n\r\n\tcompleteTaskHandler = taskIndex => {\r\n\t\tthis.showLoader({ state: true, text: \"Completing task...\" });\r\n\r\n\t\tlet uncompletedTasks = [...this.uncompletedTasks];\r\n\t\tlet task = uncompletedTasks.find((task, index) => index === taskIndex);\r\n\r\n\t\taxios.put(`http://localhost:3030/api/complete-todo/${task._id}`)\r\n\t\t\t.then(res => {\r\n\t\t\t\tif(this.isSuccessStatus(res.status)){\r\n\t\t\t\t\tuncompletedTasks[taskIndex] = res.data.todo;\r\n\t\t\t\t\tthis.setState({ \r\n\t\t\t\t\t\ttasks: [\r\n\t\t\t\t\t\t\t...this.completedTasks,\r\n\t\t\t\t\t\t\t...uncompletedTasks\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => console.error(err))\r\n\t\t\t.finally(() => {\r\n\t\t\t\tthis.showLoader({ state: false })\r\n\t\t\t})\r\n\t}\r\n\r\n\tdeleteTodoHandler = task => {\r\n\t\tthis.showLoader({ text: \"Deleting task. Please wait...\" });\r\n\r\n\t\tlet taskId = task._id;\r\n\t\taxios.delete(`http://localhost:3030/api/remove/${taskId}`)\r\n\t\t\t.then(res => {\r\n\t\t\t\tif(this.isSuccessStatus(res.status)){\r\n\t\t\t\t\tlet tasks = [...this.state.tasks];\r\n\t\t\t\t\tlet taskIndex = tasks.findIndex(todo => todo._id === res.data.todo._id);\r\n\t\t\t\t\tif(taskIndex > -1){\r\n\t\t\t\t\t\ttasks.splice(taskIndex, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState({ tasks });\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => console.error(err))\r\n\t\t\t.finally(() => {\r\n\t\t\t\tthis.showLoader({ state: false });\r\n\t\t\t})\r\n\t}\r\n\r\n\tisSuccessStatus =  statusCode => {\r\n\t\tif(!statusCode || statusCode < 100){\r\n\t\t\treturn false;\r\n\t\t} \r\n\r\n\t\treturn statusCode >= 200 && statusCode < 300\r\n\t}\r\n\r\n\tclearTodos = () => {\r\n\t\tthis.showLoader({ state: true, text: \"Clearing tasks...\" });\r\n\t\taxios.delete(\"http://localhost:3030/api/clear/?completed=true\")\r\n\t\t\t.then(res => {\r\n\t\t\t\tif(this.isSuccessStatus(res.status)){\r\n\t\t\t\t\treturn res.data.todos;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthrow new Error(\"Couldn't clear tasks\");\r\n\t\t\t})\r\n\t\t\t.then(uncompletedTasks => {\r\n\t\t\t\tthis.setState({ tasks: uncompletedTasks });\r\n\t\t\t})\r\n\t\t\t.catch(err => console.error(err.message))\r\n\t\t\t.finally(() => {\r\n\t\t\t\tthis.showLoader({ state: false });\r\n\t\t\t})\r\n\t}\r\n\r\n\tshowLoader = ({state = true, text=\"Loading...\"}) => {\r\n\t\tthis.setState({\r\n\t\t\tloader: {\r\n\t\t\t\tshow: state,\r\n\t\t\t\ttext\r\n\t\t\t} \r\n\t\t});\r\n\t}\r\n\t\r\n\tget completedTasks(){\r\n\t\treturn this.state.tasks.filter(task => task.completed)\r\n\t}\r\n\r\n\tget uncompletedTasks(){\r\n\t\treturn this.state.tasks.filter(task => !task.completed)\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.showLoader({ state: true })\r\n\t\taxios.get(\"http://localhost:3030/api/\")\r\n\t\t\t.then(res => {\r\n\t\t\t\tlet { data, status } = res;\r\n\r\n\t\t\t\tif(status >= 200 || status < 300){\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\ttasks: data.todos || []\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => console.error(err))\r\n\t\t\t.finally(() => {\r\n\t\t\t\tthis.showLoader({ state: false })\r\n\t\t\t})\r\n\t}\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport './styles/Index.css';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}